C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       02/25/2021 10:18:03 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD_DISPLAY
OBJECT MODULE PLACED IN .\Objects\lcd_display.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\hardware\HT1621B\lcd_display.c LARGE OPTIMIZE(8,SPEED) BROW
                    -SE INCDIR(..\hardware\ADC;..\hardware\debug;..\hardware\DELAY;..\hardware\Flash;..\hardware\HT1621B;..\hardware\Key;..\h
                    -ardware\my_stdio;..\hardware\OLED;..\hardware\product;..\hardware\Pwm;..\hardware\SYS;..\hardware\Timer;..\hardware\Uart
                    -;..\hardware\WDT;..\My_os) DEBUG OBJECTEXTEND PRINT(.\Listings\lcd_display.lst) OBJECT(.\Objects\lcd_display.obj)

line level    source

   1          #include "lcd_display.h"
   2          #include "ht1621b.h"
   3          #include "sys.h"
   4          
   5          
   6          var_info_t Var_info_display = {0, 0, 0, 0};
   7          
   8          
   9          void ht1621_all_display(void)
  10          {
  11   1          u8 i = 0;
  12   1      
  13   1          for (i = 0; i < 32; ++i)   //max seg 31
  14   1          {
  15   2              ht1621_write_byte(i, 0x0F);   //置1为点亮 com全开
  16   2          }
  17   1      
  18   1      }
  19          
  20          void ht1621_all_clear(void)
  21          {
  22   1          u8 i = 0;
  23   1      
  24   1          for (i = 0; i < 32; ++i)   //max seg 31
  25   1          {
  26   2              ht1621_write_byte(i, 0x00);   //置1为点亮 com全关
  27   2          }
  28   1      
  29   1      }
  30          
  31          
  32          static void gap_display(u8 gap_num)
  33          {
  34   1          switch (gap_num)
  35   1          {
  36   2              case GAP_1:
  37   2                  ht1621_write_byte(Gap_29_Pin, COM2 | COM3);
  38   2                  ht1621_write_byte(Gap_30_Pin, COM_OFF);
  39   2                  break;
  40   2              case GAP_2:
  41   2                  ht1621_write_byte(Gap_29_Pin, COM1 | COM2 | COM4);
  42   2                  ht1621_write_byte(Gap_30_Pin, COM3 | COM4);
  43   2                  break;
  44   2              case GAP_3:
  45   2                  ht1621_write_byte(Gap_29_Pin, COM1 | COM2 | COM3 | COM4);
  46   2                  ht1621_write_byte(Gap_30_Pin,  COM3);
  47   2                  break;
  48   2              case GAP_4:
  49   2                  ht1621_write_byte(Gap_29_Pin,  COM2 | COM3);
  50   2                  ht1621_write_byte(Gap_30_Pin,  COM2 | COM3);
  51   2                  break;
  52   2              case GAP_5:
C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       02/25/2021 10:18:03 PAGE 2   

  53   2                  ht1621_write_byte(Gap_29_Pin, COM1 | COM3 | COM4);
  54   2                  ht1621_write_byte(Gap_30_Pin,  COM2 | COM3);
  55   2                  break;
  56   2              case GAP_6:
  57   2                  ht1621_write_byte(Gap_29_Pin, COM1 | COM3 | COM4);
  58   2                  ht1621_write_byte(Gap_30_Pin, COM2 | COM3 | COM4);
  59   2                  break;
  60   2              case GAP_7:
  61   2                  ht1621_write_byte(Gap_29_Pin, COM1 | COM2 | COM3);
  62   2                              ht1621_write_byte(Gap_30_Pin, COM_OFF);
  63   2                  break;
  64   2              case GAP_8:
  65   2                  ht1621_write_byte(Gap_29_Pin, COM1 | COM2 | COM3 | COM4);
  66   2                  ht1621_write_byte(Gap_30_Pin, COM2 | COM3 | COM4);
  67   2                  break;
  68   2              case GAP_9:
  69   2                  ht1621_write_byte(Gap_29_Pin, COM1 | COM2 | COM3 | COM4);
  70   2                  ht1621_write_byte(Gap_30_Pin,  COM2 | COM3);
  71   2                  break;
  72   2          }
  73   1      
  74   1      }
  75          void display_gap_process(EORROR_Index index)
  76          {
  77   1          static u8 BLINK = 0;
  78   1          switch (index)
  79   1          {
  80   2              case  NO_EORROR:
  81   2                  gap_display(Var_info_display.gap);
  82   2                  if(get_device_state() == ON)
  83   2                  lcd_display_time(flash_info.timer);
  84   2                  break;
  85   2              case  F_FLASH:
  86   2                  ht1621_send_cmd(LCD_ON);
  87   2                  if (BLINK == 0)
  88   2                  {
  89   3                      Led_On();
  90   3                      ht1621_write_byte(Gap_29_Pin, COM1);
  91   3                      ht1621_write_byte(Gap_30_Pin,  COM2 | COM3 | COM4);
  92   3                      BLINK = 1;
  93   3                  }
  94   2                  else
  95   2                  {
  96   3                      Led_Off();
  97   3                      ht1621_write_byte(Gap_29_Pin, COM_OFF);
  98   3                      ht1621_write_byte(Gap_30_Pin,  COM_OFF);
  99   3                                      ht1621_write_byte(Time_27_Pin, COM_OFF);
 100   3                      ht1621_write_byte(Time_28_Pin, COM_OFF);
 101   3                      ht1621_write_byte(Time_31_Pin, COM_OFF); //8H
 102   3                      BLINK = 0;
 103   3                  }
 104   2                  break;
 105   2              case  E_FLASH:
 106   2                  ht1621_send_cmd(LCD_ON);
 107   2                  if (BLINK == 0)
 108   2                  {
 109   3                      Led_On();
 110   3                      ht1621_write_byte(Gap_29_Pin, COM1 | COM4);
 111   3                      ht1621_write_byte(Gap_30_Pin, COM2 | COM3 | COM4);
 112   3                      BLINK = 1;
 113   3                  }
 114   2                  else
C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       02/25/2021 10:18:03 PAGE 3   

 115   2                  {
 116   3                      Led_Off();
 117   3                      ht1621_write_byte(Gap_29_Pin, COM_OFF);
 118   3                      ht1621_write_byte(Gap_30_Pin, COM_OFF);
 119   3                      ht1621_write_byte(Time_27_Pin, COM_OFF);
 120   3                      ht1621_write_byte(Time_28_Pin, COM_OFF);
 121   3                      ht1621_write_byte(Time_31_Pin, COM_OFF); //8H
 122   3                      BLINK = 0;
 123   3                  }
 124   2                  break;
 125   2          }
 126   1      
 127   1      }
 128          void display_process(void)
 129          {
 130   1          if (Var_info_display.reflish_std == SET)
 131   1          {
 132   2      
 133   2              Var_info_display.reflish_std = 0;
 134   2              switch (Var_info_display.time)
 135   2              {
 136   3                  case TIMER_ON:
 137   3                      ht1621_write_byte(Time_27_Pin, COM2 | COM4);
 138   3                      ht1621_write_byte(Time_28_Pin, COM2 | COM4 | COM3); //ON
 139   3                      ht1621_write_byte(Time_31_Pin, COM2 | COM4);
 140   3                      break;
 141   3                  case TIMER_0_5H:
 142   3                      ht1621_write_byte(Time_27_Pin, COM2 | COM4 | COM1); //0.5H
 143   3                      ht1621_write_byte(Time_28_Pin, COM2 | COM4);
 144   3                      ht1621_write_byte(Time_31_Pin, COM2 | COM4);
 145   3                      break;
 146   3                  case TIMER_1H:
 147   3                      ht1621_write_byte(Time_27_Pin, COM2 | COM4 | COM3); //1H
 148   3                      ht1621_write_byte(Time_28_Pin, COM2 | COM4);
 149   3                      ht1621_write_byte(Time_31_Pin, COM2 | COM4);
 150   3                      break;
 151   3                  case TIMER_2H:
 152   3                      ht1621_write_byte(Time_27_Pin, COM2 | COM4);
 153   3                      ht1621_write_byte(Time_28_Pin, COM2 | COM4);
 154   3                      ht1621_write_byte(Time_31_Pin, COM2 | COM4 | COM1); //2H
 155   3                      break;
 156   3                  case TIMER_4H:
 157   3                      ht1621_write_byte(Time_27_Pin, COM2 | COM4);
 158   3                      ht1621_write_byte(Time_28_Pin, COM2 | COM4 | COM1); //4h
 159   3                      ht1621_write_byte(Time_31_Pin, COM2 | COM4);
 160   3                      break;
 161   3                  case TIMER_8H:
 162   3                      ht1621_write_byte(Time_27_Pin, COM2 | COM4);
 163   3                      ht1621_write_byte(Time_28_Pin, COM2 | COM4);
 164   3                      ht1621_write_byte(Time_31_Pin, COM2 | COM4 | COM3); //8H
 165   3                      break;
 166   3              }
 167   2      
 168   2      
 169   2          }
 170   1      }
 171          void init_lcd_ht1621b(void)
 172          {
 173   1          ht1621_init_pin();
 174   1      
 175   1          ht1621_send_cmd(BIAS);
 176   1          ht1621_send_cmd(RC256);    //RC256  XTAL_32K
C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       02/25/2021 10:18:03 PAGE 4   

 177   1          ht1621_send_cmd(WDTDIS);
 178   1          ht1621_send_cmd(TMDIS);
 179   1          ht1621_send_cmd(SYSEN);
 180   1          ht1621_send_cmd(LCD_ON);
 181   1          ht1621_all_display();
 182   1      }
 183          
 184          void lcd_display_time_set(u8 time_gap)
 185          {
 186   1          Var_info_display.reflish_std = SET;
 187   1          switch (time_gap)
 188   1          {
 189   2              case TIMER_ON:
 190   2                  Var_info_display.time = TIMER_ON;
 191   2                  break;
 192   2              case TIMER_0_5H:
 193   2                  Var_info_display.time = TIMER_0_5H;
 194   2                  break;
 195   2              case TIMER_1H:
 196   2                  Var_info_display.time = TIMER_1H;
 197   2                  break;
 198   2              case TIMER_2H:
 199   2                  Var_info_display.time = TIMER_2H;
 200   2                  break;
 201   2              case TIMER_4H:
 202   2                  Var_info_display.time = TIMER_4H;
 203   2                  break;
 204   2              case TIMER_8H:
 205   2                  Var_info_display.time = TIMER_8H;
 206   2                  break;
 207   2      
 208   2          }
 209   1      
 210   1      
 211   1      }
 212          
 213          void lcd_display_blink_set(EORROR_Index index)
 214          {
 215   1          switch (index)
 216   1          {
 217   2              case NO_EORROR:
 218   2                  Var_info_display.blink_std = NO_EORROR;
 219   2                  break;
 220   2              case F_FLASH:
 221   2                  Var_info_display.blink_std = F_FLASH;
 222   2                  break;
 223   2              case E_FLASH:
 224   2                  Var_info_display.blink_std = E_FLASH;
 225   2                  break;
 226   2          }
 227   1      }
 228          
 229          
 230          void lcd_display_time(u8 time_type)
 231          {
 232   1          ht1621_send_cmd(LCD_ON);
 233   1          lcd_display_time_set(time_type);
 234   1      }
 235          
 236          void lcd_display_gap(u8 gap)
 237          {
 238   1          ht1621_send_cmd(LCD_ON);
C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       02/25/2021 10:18:03 PAGE 5   

 239   1          Var_info_display.gap = gap;
 240   1          gap_display(gap);
 241   1      }
 242          
 243          
 244          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    651    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
